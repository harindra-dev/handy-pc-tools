@use "../../core/styles/variables" as vars;
@use "../../core/styles/mixins" as mix;

.text-compare-container {
  @include mix.flex-column;
  height: calc(100vh - 150px);
  width: 100%;
  max-width: 1900px;
  margin: 0 auto;
  padding: 0 vars.$spacing-md vars.$spacing-md;
  box-sizing: border-box;
  background: vars.$brutal-white;
  will-change: contents; // Hardware acceleration

  .text-compare-header {
    margin-bottom: vars.$spacing-md;
    padding: vars.$spacing-sm;
    background: vars.$brutal-black;
    color: vars.$brutal-white;
    border: vars.$border-width-2 solid vars.$brutal-black;

    .text-compare-title {
      font-family: vars.$font-family-mono;
      font-weight: vars.$font-weight-bold;
      font-size: vars.$font-size-md;
      text-transform: uppercase;
      letter-spacing: 1px;
      margin: 0;
    }

    .text-compare-subtitle {
      font-family: vars.$font-family-mono;
      font-weight: vars.$font-weight-normal;
      font-size: vars.$font-size-xs;
      color: vars.$brutal-neon-green;
      text-transform: uppercase;
      letter-spacing: 1px;
      margin: vars.$spacing-xs 0 0 0;
    }
  }

  .loading-indicator {
    @include mix.flex-center;
    flex-direction: column;
    height: 100%;
    gap: vars.$spacing-md;

    .spinner {
      width: 50px;
      height: 50px;
      border: 3px solid rgba(vars.$brutal-black, 0.1);
      border-radius: 50%;
      border-top-color: vars.$brutal-black;
      animation: spin 1s ease infinite;
      will-change: transform;
    }

    .loading-message {
      font-family: vars.$font-family-mono;
      font-size: vars.$font-size-sm;
    }

    .error-message {
      padding: vars.$spacing-md;
      background-color: rgba(vars.$brutal-neon-red, 0.1);
      border: vars.$border-width-2 solid vars.$brutal-neon-red;
      color: vars.$brutal-neon-red;
      text-align: center;
      max-width: 400px;
      font-family: vars.$font-family-mono;
      font-size: vars.$font-size-sm;
    }
  }

  .editor-container {
    display: flex;
    flex-direction: column;
    flex: 1;
    min-height: 0;
    margin-bottom: vars.$spacing-md;

    .editor-controls {
      @include mix.flex-row;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: vars.$spacing-md;
      margin-bottom: vars.$spacing-md;

      .control-group {
        @include mix.flex-row;
        gap: vars.$spacing-sm;
        align-items: center;
        flex-wrap: wrap;
      }

      .brutal-button {
        @include mix.brutal-button;
        height: 36px;
        padding: 0 vars.$spacing-md;
        font-size: vars.$font-size-sm;
        white-space: nowrap;
        display: inline-flex;
        align-items: center;
        gap: vars.$spacing-xs;

        i {
          font-size: vars.$font-size-md;
        }
      }

      .brutal-select {
        @include mix.brutal-box;
        height: 36px;
        background: vars.$brutal-white;
        padding: 0 vars.$spacing-sm;
        font-family: vars.$font-family-mono;
        font-size: vars.$font-size-sm;
        border: vars.$border-width-2 solid vars.$brutal-black;
        appearance: none;
        padding-right: 30px;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cpath d='M0 0l4 4 4-4H0z' fill='%23000000'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 10px center;
        background-size: 8px;
      }
    }

    .editors-wrapper {
      display: flex;
      flex: 1;
      min-height: 0;
      gap: vars.$spacing-md;

      .editor-half {
        @include mix.flex-column;
        flex: 1;
        min-width: 0;
        border: vars.$border-width-2 solid vars.$brutal-black;

        .editor-title {
          padding: vars.$spacing-xs vars.$spacing-sm;
          background: vars.$brutal-black;
          color: vars.$brutal-white;
          font-family: vars.$font-family-mono;
          font-size: vars.$font-size-xs;
          text-transform: uppercase;
        }

        .editor-wrapper {
          flex: 1;
          min-height: 0;
          overflow: hidden;
        }
      }
    }
  }

  .diff-stats {
    @include mix.flex-row;
    gap: vars.$spacing-md;
    align-items: center;
    padding: vars.$spacing-sm;
    border: vars.$border-width-2 solid vars.$brutal-black;
    background: vars.$brutal-gray-lightest;
    font-family: vars.$font-family-mono;
    font-size: vars.$font-size-sm;

    .stat-item {
      @include mix.flex-row;
      align-items: center;
      gap: vars.$spacing-xs;

      .icon {
        width: 12px;
        height: 12px;
      }

      .addition {
        background-color: vars.$brutal-neon-green;
      }

      .deletion {
        background-color: vars.$brutal-neon-red;
      }

      .unchanged {
        background-color: vars.$brutal-gray-medium;
      }
    }
  }
}

// Optimized animation
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

// Monaco Editor styling overrides
:host ::ng-deep {
  .monaco-editor {
    font-family: vars.$font-family-mono !important;

    .monaco-editor-background {
      background: vars.$brutal-white !important;
    }

    .margin {
      background: rgba(vars.$brutal-gray-medium, 0.2) !important;
    }

    .current-line {
      border: 1px solid vars.$brutal-black !important;
    }

    .selected-text {
      background: vars.$brutal-cyan !important;
      color: vars.$brutal-black !important;
    }

    .line-numbers {
      color: vars.$brutal-black !important;
      font-weight: vars.$font-weight-bold !important;
    }

    .cursor {
      background: vars.$brutal-red !important;
      border: 1px solid vars.$brutal-black !important;
      width: 3px !important;
    }
  }

  .monaco-diff-editor {
    .monaco-editor {
      border-right: vars.$border-width-2 solid vars.$brutal-black;

      &:last-child {
        border-right: none;
      }
    }

    .char-insert {
      background: vars.$brutal-neon-green !important;
      color: vars.$brutal-black !important;
    }

    .char-delete {
      background: vars.$brutal-neon-red !important;
      color: vars.$brutal-white !important;
    }

    .line-insert {
      background: rgba(vars.$brutal-neon-green, 0.2) !important;
      border-left: vars.$border-width-2 solid vars.$brutal-neon-green !important;
    }

    .line-delete {
      background: rgba(vars.$brutal-neon-red, 0.2) !important;
      border-left: vars.$border-width-2 solid vars.$brutal-neon-red !important;
    }
  }

  // Optimized scrollbar styling
  .monaco-scrollable-element > .scrollbar {
    .slider {
      background: vars.$brutal-black !important;
      border: 1px solid vars.$brutal-neon-red !important;
      border-radius: 0 !important;
      transition: background-color 0.1s ease;

      &:hover {
        background: vars.$brutal-gray-dark !important;
      }
    }

    &.horizontal .slider {
      height: 8px !important;
    }

    &.vertical .slider {
      width: 8px !important;
    }
  }
}

// Responsive styles
@include mix.respond-to(md) {
  .text-compare-container {
    padding: 0 vars.$spacing-sm vars.$spacing-sm;

    .editor-container {
      .editor-controls {
        gap: vars.$spacing-sm;

        .brutal-button {
          font-size: vars.$font-size-xs;
          padding: 0 vars.$spacing-sm;
        }
      }

      .editors-wrapper {
        flex-direction: column;
      }
    }
  }
}
